name: "Build Docker Images - CI"

on:
  push:
    branches: [main, actions-test]
  schedule:
    - cron: "0 18 * * 6" # Every Sunday at 6 hrs (UTC), 0 hrs CST

jobs:
  find_docker_files:
    runs-on: ubuntu-latest
    name: "Get Docker Files list"
    outputs:
      docker_files: ${{ steps.get-docker-files.outputs.docker_files }}
    steps:
      - id: git-checkout
        name: "Checkout files from GIT"
        uses: actions/checkout@v3
      - id: get-docker-files
        name: "Get Docker files list"
        run: |
          DOCKER_FILES=$(find ${{ github.workspace }} -iname Dockerfile | awk -F '/' '{print "{\"path\":\"/"$(NF-1)"\", \"file\":\""$NF"\",\"version\":\""$(NF-1)"\"}"}' | paste -d "," -s | sed 's/.*/[&]/')
          echo "DOCKER_FILES: $DOCKER_FILES"
          echo "::set-output name=docker_files::$DOCKER_FILES"

  build_and_push_images:
    runs-on: ubuntu-latest
    name: "Build and Push Docker Image to repository"
    needs: find_docker_files
    #outputs:
    #  java_info: ${{ fromJSON(steps.test-image.outputs.java_info) }}
    strategy:
      matrix:
        docker_file: ${{ fromJSON(needs.find_docker_files.outputs.docker_files) }}
    steps:
      - id: git-checkout
        name: "Checkout files from GIT"
        uses: actions/checkout@v3
      - id: setup-quemu
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - id: setup-docker-buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - id: login-to-docker-repository
        name: "Login to Docker Repository"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: build-image
        name: "Build Docker image and save to local registry"
        uses: docker/build-push-action@v3
        with:
          context: "${{github.workspace}}${{ matrix.docker_file.path }}"
          file: "${{github.workspace}}${{ matrix.docker_file.path }}/${{ matrix.docker_file.file }}"
          load: true
          tags: "${{ secrets.BASE_TAG }}:${{ matrix.docker_file.version }}"
      - id: test-image
        name: "Test Docker Image"
        run: |
          JAVA_INFO=$(docker run --rm "${{ secrets.BASE_TAG }}:${{ matrix.docker_file.version }}" /bin/sh -c "wget -q https://gist.githubusercontent.com/josuemb/abee83f69a0af7e5beb9dd084b4eb6db/raw/81afe2a71f32e4d6e4116721a128a5dd4e40e989/test-microsoft-openjdk-alpine.sh -O /dev/stdout | /bin/sh")
          echo $JAVA_INFO
          echo "::set-output name=java_info::$JAVA_INFO"
      - id: build-and-push-image
        name: "Push Docker image to the public registry"
        uses: docker/build-push-action@v3
        with:
          context: "${{github.workspace}}${{ matrix.docker_file.path }}"
          file: "${{github.workspace}}${{ matrix.docker_file.path }}/${{ matrix.docker_file.file }}"
          push: true
          tags: "${{ secrets.BASE_TAG }}:${{ matrix.docker_file.version }}"
